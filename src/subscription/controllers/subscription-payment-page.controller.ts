import {
  Controller,
  Get,
  Post,
  Param,
  Query,
  Body,
  Res,
  Req,
  Logger,
} from '@nestjs/common';
import { Response } from 'express';
import { PaymentService } from '../services/payment.service';
import { SharedConfigService } from '../../shared/services/config.service';

@Controller('subscription-payment')
export class SubscriptionPaymentPageController {
  private readonly logger = new Logger(SubscriptionPaymentPageController.name);

  constructor(
    private readonly paymentService: PaymentService,
    private readonly configService: SharedConfigService,
  ) {}

  @Get('yookassa-return')
  async handleYookassaReturn(@Query() query: any, @Res() res: Response) {
    try {
      this.logger.log(
        `–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å YooKassa –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏. Query params:`,
        query,
      );

      // –ü–æ–ª—É—á–∞–µ–º orderId –∏–∑ query –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (—ç—Ç–æ YooKassa ID)
      const yookassaOrderId = query.orderId || query.orderid || query.order_id;

      if (!yookassaOrderId) {
        this.logger.error(
          'orderId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:',
          query,
        );

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const frontendUrl = this.configService.getFrontendUrl();
        const instructionsHtml = `
          <!DOCTYPE html>
          <html lang="ru">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      margin: 0;
                      padding: 20px;
                      min-height: 100vh;
                      display: flex;
                      align-items: center;
                      justify-content: center;
                  }
                  .container {
                      background: white;
                      border-radius: 20px;
                      padding: 40px;
                      text-align: center;
                      box-shadow: 0 20px 40px rgba(0,0,0,0.1);
                      max-width: 500px;
                      width: 100%;
                  }
                  .icon {
                      font-size: 64px;
                      margin-bottom: 20px;
                  }
                  h1 {
                      color: #333;
                      margin-bottom: 20px;
                  }
                  p {
                      color: #666;
                      line-height: 1.6;
                      margin-bottom: 20px;
                  }
                  .btn {
                      display: inline-block;
                      padding: 15px 30px;
                      background: #007bff;
                      color: white;
                      text-decoration: none;
                      border-radius: 10px;
                      font-size: 16px;
                      margin: 10px;
                      transition: background-color 0.3s;
                  }
                  .btn:hover {
                      background: #0056b3;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="icon">üîÑ</div>
                  <h1>–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</h1>
                  <p>–ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</p>
                  
                  <a href="${frontendUrl}/payment-return?type=subscription" class="btn" id="returnBtn">
                      –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                  </a>
                  
                  <p style="margin-top: 30px; font-size: 14px; color: #999;">
                      –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
                  </p>
                  
                  <script>
                    // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å orderId –∏–∑ referrer URL
                    function extractOrderIdFromReferrer() {
                      const referrer = document.referrer;
                      console.log('Referrer:', referrer);
                      
                      if (referrer && referrer.includes('yoomoney.ru')) {
                        const match = referrer.match(/orderId=([^&]+)/);
                        if (match) {
                          const orderId = match[1];
                          console.log('–ù–∞–π–¥–µ–Ω orderId –≤ referrer –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:', orderId);
                          
                          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–∞—à endpoint —Å orderId
                          window.location.href = '/subscription-payment/yookassa-return?orderId=' + orderId;
                          return true;
                        }
                      }
                      return false;
                    }
                    
                    // –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂
                    if (!extractOrderIdFromReferrer()) {
                      console.log('OrderId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ referrer –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞');
                      
                      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ –∏–∑ sessionStorage
                      const pendingPaymentId = sessionStorage?.getItem('pendingPaymentId');
                      if (pendingPaymentId) {
                        console.log('–ù–∞–π–¥–µ–Ω pendingPaymentId –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:', pendingPaymentId);
                        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ success —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–∞—à–∏–º paymentId
                        window.location.href = '/subscription-payment/success/' + pendingPaymentId;
                      }
                    }
                  </script>
              </div>
          </body>
          </html>
        `;

        res.setHeader('Content-Type', 'text/html');
        res.send(instructionsHtml);
        return;
      }

      this.logger.log(
        `–ù–∞–π–¥–µ–Ω YooKassa orderId –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏: ${yookassaOrderId}`,
      );

      // –ò—â–µ–º –ø–ª–∞—Ç–µ–∂ –ø–æ yookassaId
      const payment =
        await this.paymentService.findByYookassaId(yookassaOrderId);

      if (!payment) {
        this.logger.error(
          `–ü–ª–∞—Ç–µ–∂ –ø–æ–¥–ø–∏—Å–∫–∏ —Å yookassaId ${yookassaOrderId} –Ω–µ –Ω–∞–π–¥–µ–Ω`,
        );
        const frontendUrl = this.configService.getFrontendUrl();
        return res.redirect(
          `${frontendUrl}/payment-return?type=subscription&error=payment_not_found`,
        );
      }

      this.logger.log(`–ù–∞–π–¥–µ–Ω –ø–ª–∞—Ç–µ–∂ –ø–æ–¥–ø–∏—Å–∫–∏: ${payment.id}`);

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–∞—à —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π success endpoint
      return res.redirect(`/subscription-payment/success/${payment.id}`);
    } catch (error) {
      this.logger.error(
        `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å YooKassa –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:`,
        error,
      );

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å –æ—à–∏–±–∫–æ–π
      const frontendUrl = this.configService.getFrontendUrl();
      res.redirect(
        `${frontendUrl}/payment-return?type=subscription&error=yookassa_return_error`,
      );
    }
  }

  @Get('success/:paymentId')
  async showSuccessPage(
    @Param('paymentId') paymentId: string,
    @Res() res: Response,
  ) {
    try {
      this.logger.log(
        `–û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è paymentId: ${paymentId}`,
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
      const payment = await this.paymentService.getPayment(paymentId);

      if (!payment) {
        // –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å –æ—à–∏–±–∫–æ–π
        const frontendUrl = this.configService.getFrontendUrl();
        return res.redirect(
          `${frontendUrl}/payment-return?paymentId=${paymentId}&type=subscription&error=not_found`,
        );
      }

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —É—Å–ø–µ—à–Ω—ã–π
      if (payment.status === 'pending') {
        await this.paymentService.simulateSuccessfulPayment(paymentId);
        this.logger.log(
          `–ü–ª–∞—Ç–µ–∂ –ø–æ–¥–ø–∏—Å–∫–∏ ${paymentId} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ —É—Å–ø–µ—à–Ω—ã–π`,
        );
      }

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
      const frontendUrl = this.configService.getFrontendUrl();
      res.redirect(
        `${frontendUrl}/payment-return?paymentId=${paymentId}&type=subscription`,
      );
    } catch (error) {
      this.logger.error(
        `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è paymentId: ${paymentId}`,
        error,
      );

      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–æ–∂–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
      const frontendUrl = this.configService.getFrontendUrl();
      res.redirect(
        `${frontendUrl}/payment-return?paymentId=${paymentId}&type=subscription&error=processing_error`,
      );
    }
  }
}
